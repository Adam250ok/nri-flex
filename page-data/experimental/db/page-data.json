{"componentChunkName":"component---node-modules-gatsby-theme-documentation-src-templates-doc-js","path":"/experimental/db","result":{"data":{"doc":{"id":"bf075272-6e2a-5067-a9ef-3fd85807a475","title":"","description":null,"excerpt":"Database queries Disclaimer : this function is bundled as alpha. That means that it is not yet supported by New Relic. Flex has severalâ€¦","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"database-queries\"\n  }, \"Database queries\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Disclaimer\"), \": this function is bundled as alpha. That means that it is not yet supported by New Relic.\")), mdx(\"p\", null, \"Flex has several database drivers available, to help you run any arbitrary/custom queries against those databases.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/denisenkom/go-mssqldb\"\n  }), \"https://github.com/denisenkom/go-mssqldb\"), \" (MSSQL/SQL Server)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/go-sql-driver/mysql\"\n  }), \"https://github.com/go-sql-driver/mysql\"), \" (MySQL)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/lib/pq\"\n  }), \"https://github.com/lib/pq\"), \" (PostgreSQL)\")), mdx(\"p\", null, \"The below example shows how to run multiple queries against one database (and also how to define another database to send queries to). Using multiple database types in a single config file is totally fine.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"name: postgresDbFlex\\napis: \\n  - database: postgres\\n    db_conn: user=postgres host=postgres-db.com sslmode=disable password=flex port=5432\\n    logging:\\n      open: true\\n    custom_attributes: # applies to all queries\\n      host: myDbServer\\n    db_queries: \\n      - name: pgStatActivitySample\\n        run: select * FROM pg_stat_activity\\n        custom_attributes: # can apply additional at a nested level\\n          nestedAttr: nestedVal\\n      - name: pgStatAnotherSample\\n        run: select * FROM some_otherTable\\n  - database: postgres\\n    db_conn: user=abc host=myhost.ap-southeast-2.rds.amazonaws.com sslmode=disable password=mypass port=5432 # could be another DB\\n    queries: \\n      - name: pgStatDbSample\\n        run: select * FROM pg_stat_database LIMIT 1\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"value":"Database queries"}]}},"pageContext":{"id":"bf075272-6e2a-5067-a9ef-3fd85807a475","slug":"/experimental/db","previous":{"id":"4ea12139-6fef-58d8-ad6f-0e59cdde04a2","slug":"/functions"},"next":{"id":"3126b7ad-019b-5061-abe7-f7af3e0fd25e","slug":"/experimental/git_sync"}}}}