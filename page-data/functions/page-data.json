{"componentChunkName":"component---node-modules-gatsby-theme-documentation-src-templates-doc-js","path":"/functions","result":{"data":{"doc":{"id":"4ea12139-6fef-58d8-ad6f-0e59cdde04a2","title":"","description":null,"excerpt":"Data parsing and transformation functions Flex has many useful functions, which can be combined in different ways to help you manipulate andâ€¦","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"data-parsing-and-transformation-functions\"\n  }, \"Data parsing and transformation functions\"), mdx(\"p\", null, \"Flex has many useful functions, which can be combined in different ways to help you manipulate and tidy up your data.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#function-precedence-order\"\n  }), \"Function precedence order\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#supported-functions\"\n  }), \"Supported functions\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#add_attribute\"\n  }), \"add_attribute\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#convert_space\"\n  }), \"convert_space\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#ignore_output\"\n  }), \"ignore_output\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#keep_keys\"\n  }), \"keep_keys\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#lazy_flatten\"\n  }), \"lazy_flatten\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#lookup_file\"\n  }), \"lookup_file\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#math\"\n  }), \"math\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#perc_to_decimal\"\n  }), \"perc_to_decimal\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#remove_keys\"\n  }), \"remove_keys\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#rename_keys--replace_keys\"\n  }), \"rename_keys / replace_keys\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#sample_filter\"\n  }), \"sample_filter\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#sample_exclude_filter\"\n  }), \"sample_exclude_filter\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#sample_include_filter\"\n  }), \"sample_include_filter\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#snake_to_camel\"\n  }), \"snake_to_camel\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#split_array-leaf_array\"\n  }), \"split_array (leaf_array)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#split_objects\"\n  }), \"split_objects\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#start_key\"\n  }), \"start_key\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#store_lookups\"\n  }), \"store_lookups\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#strip_keys\"\n  }), \"strip_keys\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#timestamp\"\n  }), \"timestamp\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#to_lower\"\n  }), \"to_lower\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#value_parser\"\n  }), \"value_parser\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#value_transformer\"\n  }), \"value_transformer\"))))), mdx(\"h2\", {\n    \"id\": \"function-precedence-order\"\n  }, \"Function precedence order\"), mdx(\"p\", null, \"Flex applies data parsing and transformation functions in a specific order, regardless of where in the configuration files you declare them. Keep the functions precedence order in mind to avoid unexpected or empty results.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#lookup_file\"\n  }), \"lookup_file\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#start_key\"\n  }), \"start_key\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#strip_keys\"\n  }), \"strip_keys\"), \" \", \"*\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#lazy_flatten\"\n  }), \"lazy_flatten\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#split_array\"\n  }), \"split_array (leaf_array)\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#split_objects\"\n  }), \"split_objects\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Standard flatten (auto-flattening)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#to_lower\"\n  }), \"to_lower\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#convert_space\"\n  }), \"convert_space\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#snake_to_camel\"\n  }), \"snake_to_camel\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#perc_to_decimal\"\n  }), \"perc_to_decimal\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#value_parser\"\n  }), \"value_parser\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#value_transformer\"\n  }), \"value_transformer\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#rename_keys--replace_keys\"\n  }), \"rename_keys / replace_keys\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#store_lookups\"\n  }), \"store_lookups\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#keep_keys\"\n  }), \"keep_keys\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#ignore_output\"\n  }), \"ignore_output\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#sample_include_filter\"\n  }), \"sample_include_filter\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#sample_filter\"\n  }), \"sample_filter\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#sample_exclude_filter\"\n  }), \"sample_exclude_filter\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#math\"\n  }), \"math\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#add_attribute\"\n  }), \"add_attribute\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#remove_keys\"\n  }), \"remove_keys\"))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"*\", \" Happens before attribute modification and autoflattening, which is useful to get rid of unwanted data and arrays early on.\")), mdx(\"h2\", {\n    \"id\": \"flex-supported-functions\"\n  }, \"Flex supported functions\"), mdx(\"p\", null, \"Here is a list of supported functions. Be aware that while all the examples use JSON payloads for convenience, source data can be in a variety of different formats.\"), mdx(\"h3\", {\n    \"id\": \"add_attribute\"\n  }, \"add_attribute\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Applies to\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"API\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Adds extra attributes to the resulting sample. Can use attributes from the result to create the extra attribute.\")))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\")), mdx(\"p\", null, \"Consider a service that returns the following payload:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n    \\\"leaderInfo\\\": {\\n        \\\"leader\\\": \\\"8a69d5f6b7814500\\\",\\n        \\\"startTime\\\": \\\"2014-10-24T13:15:51.186620747-07:00\\\",\\n        \\\"uptime\\\": \\\"10m59.322358947s\\\",\\n        \\\"abc\\\": {\\n            \\\"def\\\": 123,\\n            \\\"hij\\\": 234\\n        }\\n    },\\n    \\\"name\\\": \\\"node3\\\"\\n}\\n\")), mdx(\"p\", null, \"You could use the payload to generate a link that can be added as an extra attribute to the resulting sample:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"name: example\\napis:\\n    - name: someService\\n      url: http://some-service.com/status\\n      add_attribute:\\n          # use the 'id' attribute of the service output\\n          link: https://some-other-service/nodes/${id}\\n\")), mdx(\"p\", null, \"Which would return the following:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"\\\"metrics\\\": [{\\n  \\\"event_type\\\": \\\"someServiceSample\\\",\\n  \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n  \\\"leaderInfo.abc.def\\\": 1,\\n  \\\"leaderInfo.abc.hij\\\": 2,\\n  \\\"leaderInfo.leader\\\": \\\"a8a69d5f6b7814500\\\",\\n  \\\"leaderInfo.startTime\\\": \\\"2014-10-24T13:15:51.186620747-07:00\\\",\\n  \\\"leaderInfo.uptime\\\": \\\"10m59.322358947s\\\",\\n  \\\"link\\\": \\\"https://some-other-service/nodes/eca0338f4ea31566\\\",\\n  \\\"name\\\": \\\"node3\\\"\\n}]\\n\")), mdx(\"h3\", {\n    \"id\": \"convert_space\"\n  }, \"convert_space\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Applies to\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"API\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Replaces spaces in key names with other characters.\")))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\")), mdx(\"p\", null, \"Consider a service that returns the following payload:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n    \\\"leader info\\\": {\\n        \\\"leader\\\": \\\"8a69d5f6b7814500\\\",\\n        \\\"start time\\\": \\\"2014-10-24T13:15:51.186620747-07:00\\\",\\n        \\\"uptime\\\": \\\"10m59.322358947s\\\",\\n        \\\"abc\\\": {\\n            \\\"def\\\": 123,\\n            \\\"hij\\\": 234\\n        }\\n    },\\n    \\\"name\\\": \\\"node3\\\"\\n}\\n\")), mdx(\"p\", null, \"You could convert the spaces in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"leader info\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"start time\"), \" to, for example, underscores:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"name: example\\napis:\\n    - name: someService\\n      url: http://some-service.com/status\\n      convert_space: '_'\\n\")), mdx(\"p\", null, \"Which would return the following:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"\\\"metrics\\\": [{\\n  \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n  \\\"leader_info.abc.def\\\": 123,\\n  \\\"leader_info.leader\\\": \\\"8a69d5f6b7814500\\\",\\n  \\\"leader_info.abc.hij\\\": 234,\\n  \\\"leader_info.start_time\\\": \\\"2014-10-24T13:15:51.186620747-07:00\\\",\\n  \\\"leader_info.uptime\\\": \\\"10m59.322358947s\\\",\\n  \\\"name\\\": \\\"node3\\\"\\n}]\\n\")), mdx(\"h3\", {\n    \"id\": \"ignore_output\"\n  }, \"ignore_output\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Applies to\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"API\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Ignores the output of some API, that is, it does not create a sample for the result, but still caches it. This is useful when creating lookups/cache for other APIs executions.\")))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\")), mdx(\"p\", null, \"Consider a service that returns the following payload:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n    \\\"leaderInfo\\\": {\\n        \\\"leader\\\": \\\"8a69d5f6b7814500\\\",\\n        \\\"startTime\\\": \\\"2014-10-24T13:15:51.186620747-07:00\\\",\\n        \\\"uptime\\\": \\\"10m59.322358947s\\\",\\n        \\\"abc\\\": {\\n            \\\"def\\\": 123,\\n            \\\"hij\\\": 234\\n        }\\n    },\\n    \\\"name\\\": \\\"node3\\\"\\n}\\n\")), mdx(\"p\", null, \"You could use it as source of values for other APIs:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"name: example\\napis:\\n    - name: someService\\n      url: http://some-service.com/status\\n      store_lookups:\\n          # store the 'id' into a lookup key named 'nodeId'\\n          nodeId: id\\n      ignore_output: true\\n    - name: useLookup\\n      # use the 'nodeId' stored in the previous APIs to execute this one\\n      url: http://some-other-service.com/${lookup:nodeId}/status\\n\")), mdx(\"h3\", {\n    \"id\": \"keep_keys\"\n  }, \"keep_keys\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Applies to\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"API\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Keeps only the keys matching the regular expressions. This is useful for keeping just some key metrics.\")))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\")), mdx(\"p\", null, \"Consider a service that returns the following payload:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n    \\\"leaderInfo\\\": {\\n        \\\"leader\\\": \\\"8a69d5f6b7814500\\\",\\n        \\\"startTime\\\": \\\"2014-10-24T13:15:51.186620747-07:00\\\",\\n        \\\"uptime\\\": \\\"10m59.322358947s\\\",\\n        \\\"abc\\\": {\\n            \\\"def\\\": 123,\\n            \\\"hij\\\": 234\\n        }\\n    },\\n    \\\"name\\\": \\\"node3\\\"\\n}\\n\")), mdx(\"p\", null, \"You could keep just the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"id\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"name\"), \" fields by using this configuration:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"name: example\\napis:\\n    - name: someService\\n      url: http://some-service.com/status\\n      keep_keys:\\n          - id\\n          - name\\n\")), mdx(\"h3\", {\n    \"id\": \"lazy_flatten\"\n  }, \"lazy_flatten\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Applies to\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"API\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Performs a lazy flattening operation. The result differs depending on the object that's flattened. By default, Flex always performs data flattening; depending on the type of payload it either creates one sample or many, all with the same name.\")))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\")), mdx(\"p\", null, \"Consider a service that returns the following json payload:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"contacts\\\": [\\n        {\\n            \\\"name\\\": \\\"batman\\\",\\n            \\\"number\\\": 911\\n        },\\n        {\\n            \\\"name\\\": \\\"robin\\\",\\n            \\\"number\\\": 112\\n        }\\n    ]\\n}\\n\")), mdx(\"p\", null, \"Flex flattens the structure and creates two samples if not asked to perform any transformation.\"), mdx(\"p\", null, \"For example, using the following configuration:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"name: example\\napis:\\n    - name: status\\n      url: http://some-service.com/status\\n\")), mdx(\"p\", null, \"Will give you a result similar to:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"\\n\\\"metrics\\\": [{\\n    \\\"event_type\\\": \\\"statusSample\\\",\\n    \\\"name\\\": \\\"batman\\\",\\n    \\\"number\\\": 911\\n  },\\n  {\\n    \\\"event_type\\\": \\\"statusSample\\\",\\n    \\\"name\\\": \\\"robin\\\",\\n    \\\"number\\\": 112\\n  }\\n]\\n\")), mdx(\"p\", null, \"If you want to have all the data in the same sample, you could perform a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"lazy_flatten\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"name: example\\napis:\\n    - name: status\\n      url: http//some-service.com/status\\n    lazy_flatten:\\n      - contacts\\n\")), mdx(\"p\", null, \"Which would return something similar to the following:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"\\\"metrics\\\": [{\\n    \\\"contacts.flat.0.name\\\": \\\"batman\\\",\\n    \\\"contacts.flat.0.number\\\": 911,\\n    \\\"contacts.flat.1.name\\\": \\\"robin\\\",\\n    \\\"contacts.flat.1.number\\\": 112,\\n  }\\n]\\n\")), mdx(\"p\", null, \"On the other hand, with a payload like the following:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"contacts\\\": {\\n        \\\"first\\\": {\\n            \\\"name\\\": \\\"batman\\\",\\n            \\\"number\\\": 911\\n        },\\n        \\\"second\\\": {\\n            \\\"name\\\": \\\"robin\\\",\\n            \\\"number\\\": 112\\n        }\\n    }\\n}\\n\")), mdx(\"p\", null, \"The same configuration gives the following Which would return the following:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"\\\"metrics\\\": [{\\n    \\\"contacts.flat.first.name\\\": \\\"batman\\\",\\n    \\\"contacts.flat.first.number\\\": 911,\\n    \\\"contacts.flat.second.name\\\": \\\"robin\\\",\\n    \\\"contacts.flat.second.number\\\": 112,\\n  }\\n]\\n\")), mdx(\"h3\", {\n    \"id\": \"lookup_file\"\n  }, \"lookup_file\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Applies to\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"API\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Dynamically inject values into configurations using a JSON file containing an array of objects.\")))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\")), mdx(\"p\", null, \"Uses a lookup file to dynamically generate separate configuration files for each object within the array, and substitutes the variables in the configuration using the expression \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"${lf:var-name}\"), \".\"), mdx(\"p\", null, \"Consider a file with the following content:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"[\\n    {\\n        \\\"name\\\": \\\"some-service\\\",\\n        \\\"addr\\\": \\\"some-service.com:80\\\"\\n    },\\n    {\\n        \\\"name\\\": \\\"another-service\\\",\\n        \\\"addr\\\": \\\"another-service.com:80\\\"\\n    }\\n]\\n\")), mdx(\"p\", null, \"Assuming each service returns a payload similar to:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n    \\\"leaderInfo\\\": {\\n        \\\"leader\\\": \\\"8a69d5f6b7814500\\\",\\n        \\\"startTime\\\": \\\"2014-10-24T13:15:51.186620747-07:00\\\",\\n        \\\"uptime\\\": \\\"10m59.322358947s\\\",\\n        \\\"abc\\\": {\\n            \\\"def\\\": 123,\\n            \\\"hij\\\": 234\\n        }\\n    },\\n    \\\"name\\\": \\\"node3\\\"\\n}\\n\")), mdx(\"p\", null, \"You could use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"lookup_file\"), \" to generate multiple API executions and therefore samples:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"name: example\\nlookup_file: addresses.json\\napis:\\n    - name: someService\\n      url: http://${lf:addr}/status\\n\")), mdx(\"p\", null, \"Which would return the following:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"\\\"metrics\\\": [{\\n  \\\"event_type\\\": \\\"someServiceSample\\\",\\n  \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n  \\\"leaderInfo.abc.def\\\": 123,\\n  \\\"leaderInfo.abc.hij\\\": 234,\\n  \\\"leaderInfo.leader\\\": \\\"a8a69d5f6b7814500\\\",\\n  \\\"leaderInfo.startTime\\\": \\\"2014-10-24T13:15:51.186620747-07:00\\\",\\n  \\\"leaderInfo.uptime\\\": \\\"10m59.322358947s\\\",\\n  \\\"name\\\": \\\"node3\\\",\\n  },{\\n  \\\"event_type\\\": \\\"someServiceSample\\\",\\n  \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n  \\\"leaderInfo.abc.def\\\": 123,\\n  \\\"leaderInfo.abc.hij\\\": 234,\\n  \\\"leaderInfo.leader\\\": \\\"a8a69d5f6b7814500\\\",\\n  \\\"leaderInfo.startTime\\\": \\\"2014-10-24T13:15:51.186620747-07:00\\\",\\n  \\\"leaderInfo.uptime\\\": \\\"10m59.322358947s\\\",\\n  \\\"name\\\": \\\"node3\\\",\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"math\"\n  }, \"math\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Applies to\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"API\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Performs math operations with the values of the attributes specified in the expression and/or other explicit numbers.\")))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\")), mdx(\"p\", null, \"Consider a service that returns the following payload:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n    \\\"leaderInfo\\\": {\\n        \\\"leader\\\": \\\"8a69d5f6b7814500\\\",\\n        \\\"startTime\\\": \\\"2014-10-24T13:15:51.186620747-07:00\\\",\\n        \\\"uptime\\\": \\\"10m59.322358947s\\\",\\n        \\\"abc\\\": {\\n            \\\"def\\\": 123,\\n            \\\"hij\\\": 234\\n        }\\n    },\\n    \\\"name\\\": \\\"node3\\\"\\n}\\n\")), mdx(\"p\", null, \"You could create another attribute that is, for example, the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"sum\"), \" of attributes \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"leaderInfo.abc.def\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"leaderInfo.abc.hij\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"name: example\\napis:\\n    - name: someService\\n      url: http://some-service.com/status\\n      math:\\n          sum: ${leaderInfo.abc.def} + ${leaderInfo.abc.hij} + 1\\n\")), mdx(\"p\", null, \"Which would return the following:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"\\\"metrics\\\": [{\\n  \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n  \\\"leaderInfo.abc.def\\\": 123,\\n  \\\"leaderInfo.abc.hij\\\": 234,\\n  \\\"leaderInfo.leader\\\": \\\"a8a69d5f6b7814500\\\",\\n  \\\"leaderInfo.startTime\\\": \\\"a2014-10-24T13:15:51.186620747-07:00\\\",\\n  \\\"leaderInfo.uptime\\\": 10,\\n  \\\"name\\\": \\\"node3\\\",\\n  \\\"sum\\\": 358\\n}]\\n\")), mdx(\"h3\", {\n    \"id\": \"perc_to_decimal\"\n  }, \"perc_to_decimal\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Applies to\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"API\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Converts any percentage formatted value into its decimal representation.\")))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\")), mdx(\"p\", null, \"Consider a service that returns the following payload:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n    \\\"leaderInfo\\\": {\\n        \\\"leader\\\": \\\"8a69d5f6b7814500\\\",\\n        \\\"startTime\\\": \\\"2014-10-24T13:15:51.186620747-07:00\\\",\\n        \\\"uptime\\\": \\\"10m59.322358947s\\\",\\n        \\\"abc\\\": {\\n            \\\"def\\\": \\\"123%\\\",\\n            \\\"hij\\\": \\\"234%\\\"\\n        }\\n    },\\n    \\\"name\\\": \\\"node3\\\"\\n}\\n\")), mdx(\"p\", null, \"You could convert the percentage formatted values in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"leaderInfo.abc.def\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"leaderInfo.abc.hij\"), \" to their decimal representations.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"name: example\\napis:\\n    - name: someService\\n      url: http://some-service.com/status\\n      perc_to_decimal: true\\n\")), mdx(\"p\", null, \"Which would return the following:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"\\\"metrics\\\": [{\\n  \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n  \\\"leader_info.abc.def\\\": 123,\\n  \\\"leader_info.abc.hij\\\": 234,\\n  \\\"leader_info.leader\\\": \\\"8a69d5f6b7814500\\\",\\n  \\\"leader_info.start_time\\\": \\\"2014-10-24T13:15:51.186620747-07:00\\\",\\n  \\\"leader_info.uptime\\\": \\\"10m59.322358947s\\\",\\n  \\\"name\\\": \\\"node3\\\"\\n}]\\n\")), mdx(\"h3\", {\n    \"id\": \"remove_keys\"\n  }, \"remove_keys\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Applies to\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"API\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Uses a regular expression to remove selected keys (attributes) from your data:\")))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\")), mdx(\"p\", null, \"Consider a service that returns the following payload:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n    \\\"leaderInfo\\\": {\\n        \\\"leader\\\": \\\"8a69d5f6b7814500\\\",\\n        \\\"startTime\\\": \\\"2014-10-24T13:15:51.186620747-07:00\\\",\\n        \\\"uptime\\\": \\\"10m59.322358947s\\\",\\n        \\\"abc\\\": {\\n            \\\"def\\\": 123,\\n            \\\"hij\\\": 234\\n        }\\n    },\\n    \\\"name\\\": \\\"node3\\\"\\n}\\n\")), mdx(\"p\", null, \"You could remove some of the keys using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"remove_keys\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"name: example\\napis:\\n    - name: someService\\n      url: http://some-service.com/status\\n      remove_keys:\\n          - time\\n\")), mdx(\"p\", null, \"Which would return something similar to the following:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"\\\"metrics\\\": [{\\n  \\\"event_type\\\": \\\"someServiceSample\\\",\\n  \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n  \\\"leaderInfo.abc.def\\\": 123,\\n  \\\"leaderInfo.abc.hij\\\": 234,\\n  \\\"leaderInfo.leader\\\": \\\"8a69d5f6b7814500\\\",\\n  \\\"name\\\": \\\"node3\\\"\\n}]\\n\")), mdx(\"p\", null, \"Be aware that the value of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"remove_keys\"), \" matches at any level, meaning that it could remove complete objects if any part of the name matches the regular expression.\"), mdx(\"h3\", {\n    \"id\": \"rename_keys--replace_keys\"\n  }, \"rename_keys / replace_keys\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Applies to\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"API\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Uses a regex to find and rename keys\")))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\")), mdx(\"p\", null, \"Consider a service that returns the following payload:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n    \\\"leaderInfo\\\": {\\n        \\\"leader\\\": \\\"8a69d5f6b7814500\\\",\\n        \\\"startTime\\\": \\\"2014-10-24T13:15:51.186620747-07:00\\\",\\n        \\\"uptime\\\": \\\"10m59.322358947s\\\",\\n        \\\"abc\\\": {\\n            \\\"def\\\": 123,\\n            \\\"hij\\\": 234\\n        }\\n    },\\n    \\\"name\\\": \\\"node3\\\"\\n}\\n\")), mdx(\"p\", null, \"You could rename the key \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"id\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"identifier\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"name\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nodeName\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"name: example\\napis:\\n    - name: someService\\n      url: http://some-service.com/status\\n      # replace_keys for backcompat\\n      rename_keys:\\n          id: identifier\\n          name: nodeName\\n\")), mdx(\"p\", null, \"Which would return the following:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"\\\"metrics\\\": [{\\n  \\\"identifier\\\": \\\"eca0338f4ea31566\\\",\\n  \\\"leaderInfo.abc.def\\\": 123,\\n  \\\"leaderInfo.abc.hij\\\": 234,\\n  \\\"leaderInfo.leader\\\": \\\"8a69d5f6b7814500\\\",\\n  \\\"leaderInfo.startTime\\\": \\\"2014-10-24T13:15:51.186620747-07:00\\\",\\n  \\\"leaderInfo.uptime\\\": \\\"10m59.322358947s\\\",\\n  \\\"nodeName\\\": \\\"node3\\\"\\n}]\\n\")), mdx(\"h3\", {\n    \"id\": \"sample_filter\"\n  }, \"sample_filter\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Applies to\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"API\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Skips creating the sample if both a key and value is found in the sample\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"if \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"sample_exclude_filter\"), \" is present, both filters will be applied.\")))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\")), mdx(\"p\", null, \"Consider a service that returns the following payload:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n    \\\"leaderInfo\\\": {\\n        \\\"leader\\\": \\\"8a69d5f6b7814500\\\",\\n        \\\"startTime\\\": \\\"2014-10-24T13:15:51.186620747-07:00\\\",\\n        \\\"uptime\\\": \\\"10m59.322358947s\\\",\\n        \\\"abc\\\": {\\n            \\\"def\\\": 123,\\n            \\\"hij\\\": 234\\n        }\\n    },\\n    \\\"name\\\": \\\"node3\\\"\\n}\\n\")), mdx(\"p\", null, \"You could completely skip creating the output sample:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"name: example\\napis:\\n    - name: someService\\n      url: http://some-service.com/status\\n      sample_filter:\\n          - name: node3\\n\")), mdx(\"p\", null, \"Which would return the following:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"\\\"metrics\\\": []\\n\")), mdx(\"h3\", {\n    \"id\": \"sample_include_filter\"\n  }, \"sample_include_filter\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Applies to\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"API\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"If a sample is included using sample_include_filter, Flex evaluates sample_filter and sample_exclude_filter next\")))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\")), mdx(\"p\", null, \"Consider a service that returns the following payload:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"usageInfo\\\": [\\n        {\\n            \\\"quantities\\\": 10,\\n            \\\"customerId\\\": \\\"abc\\\"\\n        },\\n        {\\n            \\\"quantities\\\": 20,\\n            \\\"customerId\\\": \\\"xyz\\\"\\n        }\\n    ]\\n}\\n\")), mdx(\"p\", null, \"You may only want to have \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"customerId\\\": \\\"abc\\\"\"), \" in the ouput sample:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"name: example\\napis:\\n    - name: someService\\n      url: http://some-service.com/samples\\n      sample_include_filter:\\n          - customerId: abc\\n\")), mdx(\"p\", null, \"Which would return the following:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"\\\"metrics\\\": [\\n  {\\n    \\\"api.StatusCode\\\": 200,\\n    \\\"customerId\\\": \\\"abc\\\",\\n    \\\"event_type\\\": \\\"usageInfoSample\\\",\\n    \\\"integration_name\\\": \\\"com.newrelic.nri-flex\\\",\\n    \\\"integration_version\\\": \\\"Unknown-SNAPSHOT\\\",\\n    \\\"quantities\\\": 10\\n  },\\n]\\n\")), mdx(\"h3\", {\n    \"id\": \"sample_exclude_filter\"\n  }, \"sample_exclude_filter\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Applies to\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"API\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Skips creating the sample if both a key and value is found in the sample.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"If \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"sample_filter\"), \" is present, both \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"sample_filter\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"sample_exclude_filter\"), \" are applied.\")))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\")), mdx(\"p\", null, \"Consider a service that returns the following payload:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"usageInfo\\\": [\\n        {\\n            \\\"quantities\\\": 10,\\n            \\\"customerId\\\": \\\"abc\\\"\\n        },\\n        {\\n            \\\"quantities\\\": 20,\\n            \\\"customerId\\\": \\\"xyz\\\"\\n        }\\n    ]\\n}\\n\")), mdx(\"p\", null, \"You may want to exclude \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"customerId\\\": \\\"abc\\\"\"), \" from the output sample:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"name: example\\napis:\\n    - name: someService\\n      url: http://some-service.com/samples\\n      sample_exclude_filter:\\n          - customerId: abc\\n\")), mdx(\"p\", null, \"Which would return the following:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"\\\"metrics\\\": [\\n  {\\n    \\\"api.StatusCode\\\": 200,\\n    \\\"customerId\\\": \\\"xyz\\\",\\n    \\\"event_type\\\": \\\"usageInfoSample\\\",\\n    \\\"integration_name\\\": \\\"com.newrelic.nri-flex\\\",\\n    \\\"integration_version\\\": \\\"Unknown-SNAPSHOT\\\",\\n    \\\"quantities\\\": 20\\n  },\\n]\\n\")), mdx(\"h3\", {\n    \"id\": \"snake_to_camel\"\n  }, \"snake_to_camel\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Applies to\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"API\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Converts all snake-cased attributes into camelCased formatted names.\")))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\")), mdx(\"p\", null, \"Consider a service that returns the following payload:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n    \\\"leader_info\\\": {\\n        \\\"leader\\\": \\\"8a69d5f6b7814500\\\",\\n        \\\"start_time\\\": \\\"2014-10-24T13:15:51.186620747-07:00\\\",\\n        \\\"uptime\\\": \\\"10m59.322358947s\\\",\\n        \\\"abc\\\": {\\n            \\\"def\\\": 123,\\n            \\\"hij\\\": 234\\n        }\\n    },\\n    \\\"name\\\": \\\"node3\\\"\\n}\\n\")), mdx(\"p\", null, \"You could convert \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"leader_info\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"start_time\"), \" to camelCase for increased consistency:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"name: example\\napis:\\n    - name: someService\\n      url: http://some-service.com/status\\n      snake_to_camel: true\\n\")), mdx(\"p\", null, \"Which would return the following:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"\\\"metrics\\\": [{\\n  \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n  \\\"leaderInfo.abc.def\\\": 123,\\n  \\\"leaderInfo.leader\\\": \\\"8a69d5f6b7814500\\\",\\n  \\\"leaderInfo.abc.hij\\\": 234,\\n  \\\"leaderInfo.startTime\\\": \\\"2014-10-24T13:15:51.186620747-07:00\\\",\\n  \\\"leaderInfo.uptime\\\": \\\"10m59.322358947s\\\",\\n  \\\"name\\\": \\\"node3\\\"\\n}]\\n\")), mdx(\"h3\", {\n    \"id\": \"split_array-leaf_array\"\n  }, \"split_array (leaf_array)\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Applies to\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"API\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Splits an array that has nested arrays\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Enable the leaf_array option to turn array leaf nodes into samples\")))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example 1 (split_array)\")), mdx(\"p\", null, \"Consider a service that returns the following payload:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"status\\\": 1,\\n    \\\"appstatus\\\": -128,\\n    \\\"statusstring\\\": null,\\n    \\\"appstatusstring\\\": null,\\n    \\\"results\\\": [\\n        {\\n            \\\"status\\\": -128,\\n            \\\"schema\\\": [\\n                {\\n                    \\\"name\\\": \\\"TIMESTAMP\\\",\\n                    \\\"type\\\": 6\\n                },\\n                {\\n                    \\\"name\\\": \\\"HOST_ID\\\",\\n                    \\\"type\\\": 5\\n                },\\n                {\\n                    \\\"name\\\": \\\"HOSTNAME\\\",\\n                    \\\"type\\\": 9\\n                },\\n                {\\n                    \\\"name\\\": \\\"PERCENT_USED\\\",\\n                    \\\"type\\\": 6\\n                }\\n            ],\\n            \\\"data\\\": [\\n                [1582159853733, 0, \\\"7605f6bec898\\\", 0],\\n                [1582159853733, 2, \\\"067ea6fc4c22\\\", 0],\\n                [1582159853733, 1, \\\"62a10d3f45e3\\\", 0]\\n            ]\\n        }\\n    ]\\n}\\n\")), mdx(\"p\", null, \"You could split the configuration:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"name: example\\napis:\\n    - name: voltdb_cpu\\n      event_type: voltdb\\n      url: http://some-service.com/status\\n      split_array: true\\n      set_header: [TIMESTAMP, HOST_ID, HOSTNAME, PERCENT_USED]\\n      start_key:\\n          - results>data\\n\")), mdx(\"p\", null, \"Which would return the something like following:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"\\\"metrics\\\": [{\\n   \\\"HOSTNAME\\\": \\\"7605f6bec898\\\",\\n   \\\"HOST_ID\\\": 0,\\n   \\\"PERCENT_USED\\\": 4,\\n   \\\"TIMESTAMP\\\": 1582161013979,\\n   \\\"event_type\\\": \\\"voltdb\\\",\\n   },{\\n   \\\"HOSTNAME\\\": \\\"067ea6fc4c22\\\",\\n   \\\"HOST_ID\\\": 2,\\n   \\\"PERCENT_USED\\\": 4,\\n   \\\"TIMESTAMP\\\": 1582161013978,\\n   \\\"event_type\\\": \\\"voltdb\\\",\\n   },{\\n   \\\"HOSTNAME\\\": \\\"62a10d3f45e3\\\",\\n   \\\"HOST_ID\\\": 1,\\n   \\\"PERCENT_USED\\\": 4,\\n   \\\"TIMESTAMP\\\": 1582161013980,\\n   \\\"event_type\\\": \\\"voltdb\\\",\\n }]\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example 2 (split_array and leaf_array)\")), mdx(\"p\", null, \"Consider a service that returns the following payload:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"concurrent_plays\\\": {\\n        \\\"timestamps\\\": [\\n            1585662957000,\\n            1585662958000,\\n            1585662959000\\n        ],\\n        \\\"meta\\\": {\\n            \\\"status\\\": 0\\n        },\\n        \\\"type\\\": \\\"time_series\\\",\\n        \\\"filters\\\": {\\n            \\\"AccountA\\\": [\\n                200,\\n                190,\\n                180\\n            ]\\n        }\\n    }\\n}\\n\")), mdx(\"p\", null, \"You could split the leaf nodes within \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"timestamps\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"filters\"), \" branches into separate samples, which you could then merge and join.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"name: leafArrayExample\\n\\napis:\\n  - name: getTimetamps\\n    url: http://127.0.0.1:8887/concurrent_plays.json\\n    split_array: true\\n    leaf_array: true\\n    set_header:  [Timestamp]\\n    start_key:\\n      - concurrent_plays\\n      - timestamps\\n    merge: myMetricsSample\\n    join_key: index\\n\\n  - name: getValues\\n    url: http://127.0.0.1:8887/concurrent_plays.json\\n    split_array: true\\n    leaf_array: true\\n    set_header:  [Value]\\n    start_key:\\n      - concurrent_plays\\n      - filters\\n    custom_attributes:\\n      accountid: \\\"AccountA\\\"\\n    merge: myMetricsSample\\n    join_key: index\\n\\n\")), mdx(\"p\", null, \"Which would return the following:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"\\\"metrics\\\": [\\n    {\\n        \\\"Timestamp\\\": 1585662957000,\\n        \\\"Value\\\": 200,\\n        \\\"accountid\\\": \\\"AccountA\\\",\\n        \\\"event_type\\\": \\\"myMetricsSample\\\",\\n        \\\"index\\\": 0,\\n        \\\"integration_name\\\": \\\"com.newrelic.nri-flex\\\",\\n        \\\"integration_version\\\": \\\"Unknown-SNAPSHOT\\\"\\n    },\\n    {\\n        \\\"Timestamp\\\": 1585662958000,\\n        \\\"Value\\\": 190,\\n        \\\"accountid\\\": \\\"AccountA\\\",\\n        \\\"event_type\\\": \\\"myMetricsSample\\\",\\n        \\\"index\\\": 1,\\n        \\\"integration_name\\\": \\\"com.newrelic.nri-flex\\\",\\n        \\\"integration_version\\\": \\\"Unknown-SNAPSHOT\\\"\\n    },\\n    {\\n        \\\"Timestamp\\\": 1585662959000,\\n        \\\"Value\\\": 180,\\n        \\\"accountid\\\": \\\"AccountA\\\",\\n        \\\"event_type\\\": \\\"myMetricsSample\\\",\\n        \\\"index\\\": 2,\\n        \\\"integration_name\\\": \\\"com.newrelic.nri-flex\\\",\\n        \\\"integration_version\\\": \\\"Unknown-SNAPSHOT\\\"\\n    }\\n]\\n\")), mdx(\"h3\", {\n    \"id\": \"split_objects\"\n  }, \"split_objects\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Applies to\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"API\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Splits an object that has nested objects into an array.\")))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\")), mdx(\"p\", null, \"Consider a service that return the following payload:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"first\\\": {\\n        \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n        \\\"leaderInfo\\\": {\\n            \\\"uptime\\\": \\\"10m59.322358947s\\\",\\n            \\\"abc\\\": {\\n                \\\"def\\\": 123,\\n                \\\"hij\\\": 234\\n            }\\n        },\\n        \\\"name\\\": \\\"node1\\\"\\n    },\\n    \\\"second\\\": {\\n        \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n        \\\"leaderInfo\\\": {\\n            \\\"uptime\\\": \\\"10m59.322358947s\\\",\\n            \\\"abc\\\": {\\n                \\\"def\\\": 123,\\n                \\\"hij\\\": 234\\n            }\\n        },\\n        \\\"name\\\": \\\"node2\\\"\\n    }\\n}\\n\")), mdx(\"p\", null, \"You could split the single object into two separate objects:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"name: example\\napis:\\n    - name: someService\\n      url: http://some-service.com/status\\n      split_objects: true\\n\")), mdx(\"p\", null, \"Which would return something similar to the following:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"\\\"metrics\\\": [{\\n  \\\"event_type\\\": \\\"Sample\\\",\\n  \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n  \\\"leaderInfo.abc.def\\\": 123,\\n  \\\"leaderInfo.abc.hij\\\": 234,\\n  \\\"leaderInfo.uptime\\\": \\\"10m59.322358947s\\\",\\n  \\\"name\\\": \\\"node1\\\",\\n  \\\"split.id\\\": \\\"first\\\"\\n},\\n{\\n  \\\"event_type\\\": \\\"Sample\\\",\\n  \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n  \\\"leaderInfo.abc.def\\\": 123,\\n  \\\"leaderInfo.abc.hij\\\": 234,\\n  \\\"leaderInfo.uptime\\\": \\\"10m59.322358947s\\\",\\n  \\\"name\\\": \\\"node2\\\",\\n  \\\"split.id\\\": \\\"second\\\"\\n}]\\n\")), mdx(\"h3\", {\n    \"id\": \"start_key\"\n  }, \"start_key\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Applies to\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"API\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Starts processing data at a different point in your payload.\")))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\")), mdx(\"p\", null, \"Consider a service that returns the following payload:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n    \\\"leaderInfo\\\": {\\n        \\\"leader\\\": \\\"8a69d5f6b7814500\\\",\\n        \\\"startTime\\\": \\\"2014-10-24T13:15:51.186620747-07:00\\\",\\n        \\\"uptime\\\": \\\"10m59.322358947s\\\",\\n        \\\"abc\\\": {\\n            \\\"def\\\": 123,\\n            \\\"hij\\\": 234\\n        }\\n    },\\n    \\\"name\\\": \\\"node3\\\"\\n}\\n\")), mdx(\"p\", null, \"You could tell Flex to start processing the payload from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"leaderInfo\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"name: example\\napis:\\n    - name: someService\\n      url: http://some-service.com/status\\n      start_key:\\n          - leaderInfo\\n\")), mdx(\"p\", null, \"This would mean processing only the following data:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"leaderInfo\\\": {\\n        \\\"leader\\\": \\\"8a69d5f6b7814500\\\",\\n        \\\"startTime\\\": \\\"2014-10-24T13:15:51.186620747-07:00\\\",\\n        \\\"uptime\\\": \\\"10m59.322358947s\\\",\\n        \\\"abc\\\": {\\n            \\\"def\\\": 123,\\n            \\\"hij\\\": 234\\n        }\\n    }\\n}\\n\")), mdx(\"p\", null, \"Which would return something similar to\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"\\\"metrics\\\": [{\\n  \\\"abc.def\\\": 123,\\n  \\\"abc.hij\\\": 234,\\n  \\\"event_type\\\": \\\"someServiceSample\\\",\\n  \\\"leader\\\": \\\"8a69d5f6b7814500\\\",\\n  \\\"startTime\\\": \\\"2014-10-24T13:15:51.186620747-07:00\\\",\\n  \\\"uptime\\\": \\\"10m59.322358947s\\\"\\n}]\\n\")), mdx(\"p\", null, \"Or further down:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"name: example\\napis:\\n    - name: someService\\n      url: http://some-service.com/status\\n      start_key:\\n          - leaderInfo\\n          - abc\\n\")), mdx(\"p\", null, \"Which would mean processing only this data:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"abc\\\": {\\n        \\\"def\\\": 123,\\n        \\\"hij\\\": 234\\n    }\\n}\\n\")), mdx(\"p\", null, \"Which would return something similar to\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"\\\"metrics\\\": [{\\n  \\\"def\\\": 123,\\n  \\\"event_type\\\": \\\"someServiceSample\\\",\\n  \\\"hij\\\": 234\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"store_lookups\"\n  }, \"store_lookups\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Applies to\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"API\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Stores attributes from a API that you could use in a subsequent API.\")))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\")), mdx(\"p\", null, \"Consider a service that returns the following payload:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n    \\\"leaderInfo\\\": {\\n        \\\"leader\\\": \\\"8a69d5f6b7814500\\\",\\n        \\\"startTime\\\": \\\"2014-10-24T13:15:51.186620747-07:00\\\",\\n        \\\"uptime\\\": \\\"10m59.322358947s\\\",\\n        \\\"abc\\\": {\\n            \\\"def\\\": 123,\\n            \\\"hij\\\": 234\\n        }\\n    },\\n    \\\"name\\\": \\\"node3\\\"\\n}\\n\")), mdx(\"p\", null, \"You could store the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"id\"), \" attribute to be used in a subsequent API.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"name: example\\napis:\\n    - name: storeLookups\\n      url: http://some-service.com/status\\n      store_lookups:\\n          # store the 'id' into a lookup key named 'nodeId'\\n          nodeId: id\\n    - name: useLookup\\n      url: http://some-other-service.com/${lookup:nodeId}/status\\n\")), mdx(\"h3\", {\n    \"id\": \"strip_keys\"\n  }, \"strip_keys\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Applies to\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"API\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Removes entire keys or objects from the output.\")))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\")), mdx(\"p\", null, \"Consider a service that returns the following payload:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n    \\\"leaderInfo\\\": {\\n        \\\"leader\\\": \\\"8a69d5f6b7814500\\\",\\n        \\\"startTime\\\": \\\"2014-10-24T13:15:51.186620747-07:00\\\",\\n        \\\"uptime\\\": \\\"10m59.322358947s\\\",\\n        \\\"abc\\\": {\\n            \\\"def\\\": 123,\\n            \\\"hij\\\": 234\\n        }\\n    },\\n    \\\"name\\\": \\\"node3\\\"\\n}\\n\")), mdx(\"p\", null, \"You could completely remove the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"leaderInfo\"), \" object:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"name: example\\napis:\\n    - name: someService\\n      url: http://some-service.com/status\\n      strip_keys:\\n          - leaderInfo\\n\")), mdx(\"p\", null, \"This would return something similar to:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"\\\"metrics\\\": [{\\n  \\\"event_type\\\": \\\"someServiceSample\\\",\\n  \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n  \\\"name\\\": \\\"node3\\\"\\n}]\\n\")), mdx(\"p\", null, \"You could also remove nested keys, for example \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"leader\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"startTime\"), \" under the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"leaderInfo\"), \" object:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"name: example\\napis:\\n    - name: stripKeys\\n      url: http://some-service.com/status\\n      strip_keys:\\n          - leaderInfo>leader\\n          - leaderInfo>startTime\\n\")), mdx(\"p\", null, \"Which would return something similar to:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"\\\"metrics\\\": [{\\n  \\\"event_type\\\": \\\"someServiceSample\\\",\\n  \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n  \\\"leaderInfo.abc.def\\\": 123,\\n  \\\"leaderInfo.abc.hij\\\": 234,\\n  \\\"leaderInfo.uptime\\\": \\\"10m59.322358947s\\\",\\n  \\\"name\\\": \\\"node3\\\"\\n}]\\n\")), mdx(\"p\", null, \"Note that Flex strips all keys that match the payload. This means that if the payload has multiple objects that match the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"strip_keys\"), \" value, all are be removed.\"), mdx(\"h3\", {\n    \"id\": \"timestamp\"\n  }, \"timestamp\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Applies to\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Anywhere\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Injects timestamps anywhere in your config and also performs additions or subtractions on them.\")))), mdx(\"p\", null, \"You can use the following expressions to inject a timestamp formatted in various ways:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"${timestamp:[ms|ns|s|date|datetime|datetimetz|dateutc|datetimeutc|datetimeutctz][+|-][Number][ms|milli|millisecond|ns|nano|nanosecond|s|sec|second|m|min|minute|h|hr|hour]}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ms\"), \" - milliseconds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"s\"), \" - seconds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ns\"), \" - nanoseconds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"date\"), \" - current date\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"datetime\"), \" - current datetime\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"datetimetz\"), \" - current datetime with timezone\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"dateutc\"), \" - current utc date\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"datetimeutc\"), \" - current utc datetime\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"datetimeutctz\"), \" - current utc datetime with timezone\")), mdx(\"p\", null, \"For example:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"${timestamp:ms} - current timestamp in milliseconds\\n${timestamp:date} - date in local timezone: 2006-01-02\\n${timestamp:datetime} - date and time in local timezone : 2006-01-02T03:04\\n${timestamp:datetimetz} - date and time in local timezone, with timezone : 2006-01-02T15:04:05Z07:00\\n${timestamp:dateutc} - date in utc timezone: 2006-01-02\\n${timestamp:datetimeutc} - date and time in  utc timezone: 2006-01-02T03:04\\n${timestamp:datetimeutctz} - date and time in utc timezone, with timezone: 2006-01-02T15:04:05Z07:00\\n\")), mdx(\"p\", null, \"To perform calculations, you can use any of the following expressions (or similar):\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"${timestamp:ms-5000} subtract 5000 from current timestamp in milliseconds\\n${timestamp:ms+10000}\\\" add 10000 to current timestamp in milliseconds\\n\\n${timestamp:datetime-1hr} subtract 1 hour from current datetime, return datetime\\n${timestamp:datetime+60min} add 60 minutes to current datetime, return datetime\\n\")), mdx(\"h3\", {\n    \"id\": \"to_lower\"\n  }, \"to_lower\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Applies to\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"API\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Converts all keys to lowercase.\")))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\")), mdx(\"p\", null, \"Consider a service that returns the following payload:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"Id\\\": \\\"eca0338f4ea31566\\\",\\n    \\\"leaderInfo\\\": {\\n        \\\"leader\\\": \\\"8a69d5f6b7814500\\\",\\n        \\\"startTime\\\": \\\"2014-10-24T13:15:51.186620747-07:00\\\",\\n        \\\"uptime\\\": \\\"10m59.322358947s\\\",\\n        \\\"abc\\\": {\\n            \\\"def\\\": 123,\\n            \\\"hij\\\": 234\\n        }\\n    },\\n    \\\"Name\\\": \\\"node3\\\"\\n}\\n\")), mdx(\"p\", null, \"You could rename all keys to lowercase:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"name: example\\napis:\\n    - name: someService\\n      url: http://some-service.com/status\\n      to_lower: true\\n\")), mdx(\"p\", null, \"The result would be similar to the following (notice all keys are lowercase, including keys that would be camelCased):\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"\\\"metrics\\\": [{\\n  \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n  \\\"leaderinfo.abc.def\\\": 123,\\n  \\\"leaderinfo.leader\\\": \\\"8a69d5f6b7814500\\\",\\n  \\\"leaderinfo.abc.hij\\\": 234,\\n  \\\"leaderinfo.startTime\\\": \\\"2014-10-24T13:15:51.186620747-07:00\\\",\\n  \\\"leaderinfo.uptime\\\": \\\"10m59.322358947s\\\",\\n  \\\"name\\\": \\\"node3\\\"\\n}]\\n\")), mdx(\"h3\", {\n    \"id\": \"value_parser\"\n  }, \"value_parser\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Applies to\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"API\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Finds keys using a regular expression and applies another regular expresion to extract the first value found.\")))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\")), mdx(\"p\", null, \"Consider a service that returns the following payload:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n    \\\"leaderInfo\\\": {\\n        \\\"leader\\\": \\\"a8a69d5f6b7814500\\\",\\n        \\\"startTime\\\": \\\"2014-10-24T13:15:51.186620747-07:00\\\",\\n        \\\"uptime\\\": \\\"10m59.322358947s\\\",\\n        \\\"abc\\\": {\\n            \\\"def1\\\": \\\"a:123\\\",\\n            \\\"def2\\\": \\\"a:234\\\"\\n        }\\n    },\\n    \\\"name\\\": \\\"node3\\\"\\n}\\n\")), mdx(\"p\", null, \"You could use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"value_parser\"), \" to extract/transform the numbers on keys \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"leaderInfo.abc.def1\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"leaderInfo.abc.def2\"), \", and replace them in the result with the transformed values:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"name: example\\napis:\\n    - name: someService\\n      url: http://some-service.com/status\\n      value_parser:\\n          def: '[0-9]+'\\n\")), mdx(\"p\", null, \"Which would return the following:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"\\\"metrics\\\": [{\\n  \\\"event_type\\\": \\\"someServiceSample\\\",\\n  \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n  \\\"leaderInfo.abc.def\\\": 123,\\n  \\\"leaderInfo.abc.hij\\\": 234,\\n  \\\"leaderInfo.leader\\\": \\\"a8a69d5f6b7814500\\\",\\n  \\\"leaderInfo.startTime\\\": \\\"a2014-10-24T13:15:51.186620747-07:00\\\",\\n  \\\"leaderInfo.uptime\\\": 10,\\n  \\\"name\\\": \\\"node3\\\",\\n}]\\n\")), mdx(\"h3\", {\n    \"id\": \"value_transformer\"\n  }, \"value_transformer\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Applies to\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"API\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"left\"\n  }), \"Uses a regular expression to find a key and transforms its value\")))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\")), mdx(\"p\", null, \"Consider a service that returns the following payload:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n    \\\"leaderInfo\\\": {\\n        \\\"uptime\\\": \\\"10m59.322358947s\\\",\\n        \\\"abc\\\": {\\n            \\\"def\\\": 123,\\n            \\\"hij\\\": 234\\n        }\\n    },\\n    \\\"name\\\": \\\"node3\\\"\\n}\\n\")), mdx(\"p\", null, \"Without declaring any other transformation you would get a result similar to:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"\\\"metrics\\\": [{\\n  \\\"event_type\\\": \\\"someServiceSample\\\",\\n  \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n  \\\"leaderTime.abc.def\\\": 123,\\n  \\\"leaderTime.abc.hij\\\": 234,\\n  \\\"leaderTime.leader\\\": \\\"8a69d5f6b7814500\\\",\\n  \\\"leaderTime.startTime\\\": \\\"2014-10-24T13:15:51.186620747-07:00\\\",\\n  \\\"leaderTime.uptime\\\": \\\"10m59.322358947s\\\",\\n  \\\"name\\\": \\\"node3\\\"\\n}\\n\")), mdx(\"p\", null, \"If you want to transform the value of key \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"name\"), \" into a format like for example \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"<node/name>\"), \", you could use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"value_transformer\"), \" like this:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"name: example\\napis:\\n    - name: someService\\n      url: http://some-service.com/status\\n      value_transformer:\\n          name: node_${value}\\n\")), mdx(\"p\", null, \"Which would return something similar to:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"\\\"metrics\\\": [{\\n  \\\"event_type\\\": \\\"someServiceSample\\\",\\n  \\\"id\\\": \\\"eca0338f4ea31566\\\",\\n  \\\"leaderInfo.abc.def\\\": 123,\\n  \\\"leaderInfo.abc.hij\\\": 234,\\n  \\\"leaderInfo.leader\\\": \\\"8a69d5f6b7814500\\\",\\n  \\\"leaderInfo.startTime\\\": \\\"2014-10-24T13:15:51.186620747-07:00\\\",\\n  \\\"leaderInfo.uptime\\\": \\\"10m59.322358947s\\\",\\n  \\\"name\\\": \\\"node/node3\\\"\\n}]\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"value":"Data parsing and transformation functions"},{"value":"Function precedence order"},{"value":"Flex supported functions"},{"value":"add_attribute"},{"value":"convert_space"},{"value":"ignore_output"},{"value":"keep_keys"},{"value":"lazy_flatten"},{"value":"lookup_file"},{"value":"math"},{"value":"perc_to_decimal"},{"value":"remove_keys"},{"value":"rename_keys / replace_keys"},{"value":"sample_filter"},{"value":"sample_include_filter"},{"value":"sample_exclude_filter"},{"value":"snake_to_camel"},{"value":"split_array (leaf_array)"},{"value":"split_objects"},{"value":"start_key"},{"value":"store_lookups"},{"value":"strip_keys"},{"value":"timestamp"},{"value":"to_lower"},{"value":"value_parser"},{"value":"value_transformer"}]}},"pageContext":{"id":"4ea12139-6fef-58d8-ad6f-0e59cdde04a2","slug":"/functions","previous":{"id":"ad8dbc40-de77-52fb-8356-3530eb4d7106","slug":"/deprecated/discovery"},"next":{"id":"bef3ff93-1f18-5557-afa8-f98ad6891355","slug":"/deprecated/jmx"}}}}